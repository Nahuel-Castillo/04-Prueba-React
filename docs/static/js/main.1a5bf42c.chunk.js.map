{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","offset","Math","floor","random","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GiftGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SAXU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAAC,GAAD,IAAUD,EAAV,EAAEE,OAAQF,MAAV,OAAsBR,EAAcQ,S,+BCPrDG,EAAO,uCAAG,WAAMC,GAAN,yBAAAC,EAAA,6DAEbC,EAASC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAC3CC,EAHa,sDAGwCJ,EAHxC,cAGqDK,UAAUP,GAH/D,+DAKAQ,MAAOF,GALP,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,UAAUZ,QAZf,kBAgBZM,GAhBY,4CAAH,sDCeLO,EAbM,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC9B,OACI,qBAAKc,UAAU,+DAAf,SAGQ,qBAAKC,IAAMf,EAAMgB,IAAMN,OCyBxBO,EA3BC,SAAC,GAAgB,IAAfvB,EAAc,EAAdA,SAAc,ECFJ,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/ByB,KAAK,GACLa,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WAEN5B,EAASC,GAAW4B,MAAM,SAAAC,GACtBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAAExB,IAEEyB,EDd0BK,CAAa9B,GAAjCiB,EAFe,EAEpBN,KAAaa,EAFO,EAEPA,QAErB,OACI,qCACI,6BAAMxB,IAEJwB,GAAW,4CAEb,qBAAKJ,UAAU,YAAf,SAGIH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAISA,GAHCA,EAAIC,aESnBgB,EAxBM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,oBAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAIvB,OACI,qCAEI,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWnB,KAAK,SAAAb,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADJA,Y,MCdlCiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1a5bf42c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ({target:{value}}) => setInputValue(value);\r\n\r\n    const handleSumit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cate => [ inputValue, ...cate]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSumit }>\r\n          <input\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={ handleInputChange }\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async(category) => {\r\n\r\n    const offset = Math.floor(Math.random() * 100) + 1;\r\n    const url = `https://api.giphy.com/v1/gifs/search?offset=${offset}&q=${ encodeURI(category) }&limit=10&api_key=j7YTK2glWvNU6xjliyrwuMdiuWZhkAfD`;\r\n\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GiftGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown animate__delay-2s'>\r\n            {\r\n            \r\n                <img src={ url } alt={ title } >\r\n                </img>\r\n                \r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftGridItem\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport GiftGridItem from './GiftGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Cargando...</p>}\r\n\r\n            <div className='card-grid'>\r\n           \r\n            {\r\n                images.map( img  =>\r\n                    <GiftGridItem \r\n                        key={ img.id }\r\n\r\n                        // envia cada propiedad de manera independiente\r\n                        { ...img }\r\n                    />\r\n                )\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category ).then( imgs => {    \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n        \r\n    }, [ category ]);\r\n\r\n    return state;\r\n}","\r\nimport React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One piece luffy']);\r\n\r\n    return(\r\n        <>\r\n            {/* <h2>GifExpertApp</h2> */}\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={ category } \r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}